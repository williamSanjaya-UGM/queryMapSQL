create or replace PROCEDURE USP_ETSD_INQ_TOP_BOTTOM(
    APP_NAME IN VARCHAR2,
    MODULE_NAME IN VARCHAR2,
    SUBMODULE_NAME IN VARCHAR2,
    FUNCTION_NAME IN VARCHAR2,
    SUBFUNCTION_NAME IN VARCHAR2,
    METHOD_NAME IN VARCHAR2,
    INQ_CURSOR OUT SYS_REFCURSOR
)AS
    V_STATEMENT VARCHAR2(2000);
    V_COUNT NUMERIC:=0;
BEGIN
    --BELUM DITAMBAHKAN PAGING FETCH ROW, JUGA CEK KOLOM YG DIPAKE
    V_STATEMENT:= 'SELECT MASTAPP.NAME APPNAME, MASTAPP.LVL_NAME APPLVL_NAME, MASTM.NAME MNAME, MASTM.LVL_NAME MLVL_NAME, MASTSM.NAME SMNAME, MASTSM.LVL_NAME SM_LVLNAME,MASTF.NAME FNAME, MASTF.LVL_NAME FLVL_NAME, MASTSF.NAME SFNAME, MASTSF.LVL_NAME SFLVL_NAME, MASTCODE.NAME CODENAME, MASTCODE.LVL_NAME CODELVL
    FROM ETSD_TABLE MASTAPP
    JOIN ETSD_MAPPING MAPAPP
        ON MASTAPP.ID=MAPAPP.PARENT_ID
    JOIN ETSD_TABLE MASTM
        ON MASTM.ID=MAPAPP.CHILD_ID
    JOIN ETSD_MAPPING MAPM
        ON MASTM.ID=MAPM.PARENT_ID
    JOIN ETSD_TABLE MASTSM
        ON MASTSM.ID=MAPM.CHILD_ID
    JOIN ETSD_MAPPING MAPSM
        ON MASTSM.ID=MAPSM.PARENT_ID
    JOIN ETSD_TABLE MASTF
        ON MASTF.ID=MAPSM.CHILD_ID
    JOIN ETSD_MAPPING MAPF
        ON MASTF.ID=MAPF.PARENT_ID
    JOIN ETSD_TABLE MASTSF
        ON MASTSF.ID=MAPF.CHILD_ID
    JOIN ETSD_MAPPING MAPSF
        ON MASTSF.ID=MAPSF.PARENT_ID
    JOIN ETSD_TABLE MASTCODE
        ON MASTCODE.ID=MAPSF.CHILD_ID';

    IF APP_NAME IS NOT NULL THEN
        V_STATEMENT:=V_STATEMENT || ' WHERE MASTAPP.NAME LIKE '||''''||UPPER(APP_NAME)||'%''';
        V_COUNT:=V_COUNT+1;
    END IF;
    IF MODULE_NAME IS NOT NULL THEN
        IF V_COUNT>0 THEN
            V_STATEMENT:=V_STATEMENT || ' AND MASTM.NAME LIKE '||''''||UPPER(MODULE_NAME)||'%''';
            V_COUNT:=V_COUNT+1;
        ELSE
            V_STATEMENT:=V_STATEMENT || ' WHERE MASTM.NAME LIKE '||''''||UPPER(MODULE_NAME)||'%''';
            V_COUNT:=V_COUNT+1;
        END IF;
    END IF;
    IF SUBMODULE_NAME IS NOT NULL THEN
        IF V_COUNT>0 THEN
            V_STATEMENT:=V_STATEMENT || ' AND MASTSM.NAME LIKE '||''''||UPPER(SUBMODULE_NAME)||'%''';
            V_COUNT:=V_COUNT+1;
        ELSE
            V_STATEMENT:=V_STATEMENT || ' WHERE MASTSM.NAME LIKE '||''''||UPPER(SUBMODULE_NAME)||'%''';
            V_COUNT:=V_COUNT+1;
        END IF;
    END IF;
    IF FUNCTION_NAME IS NOT NULL THEN
        IF V_COUNT>0 THEN
            V_STATEMENT:=V_STATEMENT || ' AND MASTF.NAME LIKE '||''''||UPPER(FUNCTION_NAME)||'%''';
            V_COUNT:=V_COUNT+1;
        ELSE
            V_STATEMENT:=V_STATEMENT || ' WHERE MASTF.NAME LIKE '||''''||UPPER(FUNCTION_NAME)||'%''';
            V_COUNT:=V_COUNT+1;
        END IF;
    END IF;
    IF SUBFUNCTION_NAME IS NOT NULL THEN
        IF V_COUNT>0 THEN
            V_STATEMENT:=V_STATEMENT || ' AND MASTSF.NAME LIKE '||''''||UPPER(SUBFUNCTION_NAME)||'%''';
            V_COUNT:=V_COUNT+1;
        ELSE
            V_STATEMENT:=V_STATEMENT || ' WHERE MASTSF.NAME LIKE '||''''||UPPER(SUBFUNCTION_NAME)||'%''';
            V_COUNT:=V_COUNT+1;
        END IF;
    END IF;
    IF METHOD_NAME IS NOT NULL THEN
        IF V_COUNT>0 THEN
            V_STATEMENT:=V_STATEMENT || ' AND MASTCODE.NAME LIKE '||''''||METHOD_NAME||'%''';
        ELSE
            V_STATEMENT:=V_STATEMENT || ' WHERE MASTCODE.NAME LIKE '||''''||METHOD_NAME||'%''';
        END IF;
    END IF;

    OPEN INQ_CURSOR FOR V_STATEMENT;
END;